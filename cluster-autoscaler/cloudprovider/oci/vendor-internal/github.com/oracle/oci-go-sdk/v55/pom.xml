<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.oci.sdk</groupId>
  <artifactId>go-sdk</artifactId>
  <version>0.0.1</version>
  <name>Public Go SDK</name>
  <properties>
    <preprocessor-version>2.0.0</preprocessor-version>
    <oci.get.spec.artifact.plugin.version>2.0.0</oci.get.spec.artifact.plugin.version>
    <spec-temp-dir>${project.build.directory}/swagger</spec-temp-dir>
    <preferred-temp-dir>${project.build.directory}/preferred</preferred-temp-dir>
    <preprocessed-temp-dir>${project.build.directory}/preprocessed</preprocessed-temp-dir>
    <enabled-groups-file>${project.basedir}/preview-sdk.txt</enabled-groups-file>
    <enabled-groups-dir>${project.basedir}/codegenConfig/enabledGroups</enabled-groups-dir>
    <feature-id-file>${project.basedir}/featureId.yaml</feature-id-file>
    <feature-id-dir>${project.basedir}/codegenConfig/featureIds</feature-id-dir>
    <fullyQualifiedProjectName>${env.PROJECT_NAME}</fullyQualifiedProjectName>
    <generationType>PREVIEW</generationType>
    <inceptionYear>2017</inceptionYear>
    <coreservices-api-spec-spec-file>source/coreservices-api-spec-20160918.cond.yaml</coreservices-api-spec-spec-file>
    <identity-control-plane-api-spec-spec-file>source/identity-control-plane-api-spec-20160918.cond.yaml</identity-control-plane-api-spec-spec-file>
    <casper-api-spec-spec-file>source/casper-api.cond.yaml</casper-api-spec-spec-file>
    <oralb-api-spec-spec-file>source/spec-20170115.cond.yaml</oralb-api-spec-spec-file>
    <dbaas-api-spec-spec-file>source/dbaas-api-spec-20160918.cond.yaml</dbaas-api-spec-spec-file>
    <fss-api-spec-spec-file>source/fss-api-spec-20171215.cond.yaml</fss-api-spec-spec-file>
    <hemlock-spec-spec-file>source/hemlock-api-20190901.cond.yaml</hemlock-spec-spec-file>
    <email-api-spec-spec-file>source/email-api-spec.cond.yaml</email-api-spec-spec-file>
    <public-dns-api-spec-spec-file>source/public-dns-api-spec.cond.yaml</public-dns-api-spec-spec-file>
    <maestro-spec-spec-file>source/api.cond.yaml</maestro-spec-spec-file>
    <kms-api-spec-spec-file>source/kms-api-spec-20180608.cond.yaml</kms-api-spec-spec-file>
    <resource-query-service-spec-spec-file>source/rqs.cond.yaml</resource-query-service-spec-spec-file>
    <clusters-api-spec-spec-file>source/clusters-api-spec.cond.yaml</clusters-api-spec-spec-file>
    <telemetry-public-api-spec-spec-file>source/telemetry-api.cond.yaml</telemetry-public-api-spec-spec-file>
    <workrequests-api-spec-spec-file>workrequests-api-spec.cond.yaml</workrequests-api-spec-spec-file>
    <ons-gateway-spec-spec-file>source/notification-api.cond.yaml</ons-gateway-spec-spec-file>
    <healthchecks-api-spec-spec-file>health-checks-api-spec-20180501.cond.yaml</healthchecks-api-spec-spec-file>
    <rest-api-spec-spec-file>source/api.cond.yaml</rest-api-spec-spec-file>
    <oracache-public-api-spec-file>specs/oracache-public-api-20190501.cond.yaml</oracache-public-api-spec-file>
    <marketplace-consumer-service-spec-spec-file>source/consumer-service-api.cond.yaml</marketplace-consumer-service-spec-spec-file>
    <autoscaling-public-api-spec-spec-file>source/autoscaling-api-spec.cond.yaml</autoscaling-public-api-spec-spec-file>
    <usage-proxy-spec-spec-file>usageproxyapi.cond.yaml</usage-proxy-spec-spec-file>
    <announcements-service-spec-spec-file>source/announcement-service.cond.yaml</announcements-service-spec-spec-file>
    <oci-waas-api-spec-spec-file>source/oci-waas-api-spec.cond.yaml</oci-waas-api-spec-spec-file>
    <batchservice-api-spec-spec-file>source/batchservice.cond.yaml</batchservice-api-spec-spec-file>
    <fn-api-spec-spec-file>source/functions-api-spec.cond.yaml</fn-api-spec-spec-file>
    <budgets-control-plane-spec-spec-file>source/budget.api.cond.yaml</budgets-control-plane-spec-spec-file>
    <quotas-control-plane-api-spec-spec-file>quotas-control-plane-api-spec-20181025.cond.yaml</quotas-control-plane-api-spec-spec-file>
    <digital-assistant-spec-spec-file>source/digital-assistant-api.cond.yaml</digital-assistant-spec-spec-file>
    <csg-api-spec-spec-file>source/storage-gateway-api.cond.yaml</csg-api-spec-spec-file>
    <dts-api-spec-spec-file>datats-customer-control-plane.cond.yaml</dts-api-spec-spec-file>
    <public-api-spec-spec-file>source/api.cond.yaml</public-api-spec-spec-file>
    <events-control-plane-spec-spec-file>source/events-control-plane-spec.cond.yaml</events-control-plane-spec-spec-file>
    <cloud-incident-management-service-spec-spec-file>api.cond.yaml</cloud-incident-management-service-spec-spec-file>
    <ndcs-control-plane-spec-spec-file>source/api.cond.yaml</ndcs-control-plane-spec-spec-file>
    <datacatalog-api-spec-spec-file>datacatalog-api-spec.cond.yaml</datacatalog-api-spec-spec-file>
    <cec-public-spec-spec-file>source/api.cond.yaml</cec-public-spec-spec-file>
    <odsc-pegasus-control-plane-spec-spec-file>source/api.cond.yaml</odsc-pegasus-control-plane-spec-spec-file>
    <bds-cp-spec-spec-file>source/bds-cp.cond.yaml</bds-cp-spec-spec-file>
    <analytics-control-plane-api-spec-spec-file>source/analytics-api-spec.cond.yaml</analytics-control-plane-api-spec-spec-file>
    <oracle-integration-cp-apiserver-user-spec-spec-file>source/api.cond.yaml</oracle-integration-cp-apiserver-user-spec-spec-file>
    <kam-api-spec-spec-file>source/kam-api-spec.cond.yaml</kam-api-spec-spec-file>
    <osms-spec-spec-file>source/api.cond.yaml</osms-spec-spec-file>
    <ams-spec-spec-file>source/ams-api.cond.yaml</ams-spec-spec-file>
    <service_api_spec-spec-file>specs/service_api.cond.yaml</service_api_spec-spec-file>
    <mysqlaas-api-spec-spec-file>source/mysqlaas-api-spec.cond.yaml</mysqlaas-api-spec-spec-file>
    <oci-sms-dp-api-spec-spec-file>source/oci-sms-dp-api-spec.cond.yaml</oci-sms-dp-api-spec-spec-file>
    <oci-sms-api-spec-spec-file>source/oci-sms-api-spec.cond.yaml</oci-sms-api-spec-spec-file>
    <oracle-blockchain-platform-spec-spec-file>source/blockchain-api.cond.yaml</oracle-blockchain-platform-spec-spec-file>
    <ads-control-plane-spec-spec-file>api.cond.yaml</ads-control-plane-spec-spec-file>
    <compliance-document-service-spec-spec-file>source/api.cond.yaml</compliance-document-service-spec-spec-file>
    <dis-sdk-spec-spec-file>source/dis-api.cond.yaml</dis-sdk-spec-spec-file>
    <hydra-controlplane-api-spec-spec-file>source/public-api-20200531.cond.yaml</hydra-controlplane-api-spec-spec-file>
    <vmware-provision-service-spec-spec-file>source/api.cond.yaml</vmware-provision-service-spec-spec-file>
    <usage-api-spec-spec-file>source/usage-api.api.cond.yaml</usage-api-spec-spec-file>
    <cloudguard-cp-api-spec-spec-file>source/api.cond.yaml</cloudguard-cp-api-spec-spec-file>
    <opsi-api-spec-spec-file>source/api.cond.yaml</opsi-api-spec-spec-file>
    <management-dashboard-spec-spec-file>source/api.cond.yaml</management-dashboard-spec-spec-file>
    <connectors-spec-spec-file>source/api.cond.yaml</connectors-spec-spec-file>
    <optimizer-spec-spec-file>source/api.cond.yaml</optimizer-spec-spec-file>
    <mgmtagent-cloud-services-spec-spec-file>source/api.cond.yaml</mgmtagent-cloud-services-spec-spec-file>
    <instance-agent-service-api-spec-spec-file>source/api.cond.yaml</instance-agent-service-api-spec-spec-file>
    <hydra-pika-frontend-public-api-spec-spec-file>source/public-api.cond.yaml</hydra-pika-frontend-public-api-spec-spec-file>
    <oci-bastions-spec-spec-file>source/api.cond.yaml</oci-bastions-spec-spec-file>
    <ibex-frontend-public-spec-spec-file>source/public-api.cond.yaml</ibex-frontend-public-spec-spec-file>
    <rover-cloud-service-spec-spec-file>source/api.cond.yaml</rover-cloud-service-spec-spec-file>
    <logan-api-spec-spec-file>source/api.cond.yaml</logan-api-spec-spec-file>
    <customer-controlled-access-spec-spec-file>source/api.cond.yaml</customer-controlled-access-spec-spec-file>
    <ggs-control-plane-spec-spec-file>source/api.cond.yaml</ggs-control-plane-spec-spec-file>
    <tenant-manager-spec-spec-file>source/api.external.cond.yaml</tenant-manager-spec-spec-file>
    <dbmgmt-dbadmin-spec-spec-file>source/dbmgmt-dbadmin-api.cond.yaml</dbmgmt-dbadmin-spec-spec-file>
    <aj-control-plane-spec-spec-file>source/api.cond.yaml</aj-control-plane-spec-spec-file>
    <apm-synapi-spec-spec-file>source/api.cond.yaml</apm-synapi-spec-spec-file>
    <artifacts-api-spec-spec-file>source/artifacts-api-spec.cond.yaml</artifacts-api-spec-spec-file>
    <vss-cp-spec-spec-file>release/api.yaml</vss-cp-spec-spec-file>
    <network-load-balancer-spec-spec-file>source/api.cond.yaml</network-load-balancer-spec-spec-file>
    <cloudbridge-spec-spec-file>source/api.cond.yaml</cloudbridge-spec-spec-file>
    <apm-dataserver-spec-spec-file>source/api.cond.yaml</apm-dataserver-spec-spec-file>
    <escs-sm-spec-spec-file>source/api.cond.yaml</escs-sm-spec-spec-file>
    <apm-controller-spec-spec-file>source/api.cond.yaml</apm-controller-spec-spec-file>
    <generic-artifacts-api-spec-spec-file>source/generic-artifacts-api-spec.cond.yaml</generic-artifacts-api-spec-spec-file>
    <msz-cp-spec-spec-file>release/api.yaml</msz-cp-spec-spec-file>
    <dbrs-control-plane-spec-spec-file>source/api.cond.yaml</dbrs-control-plane-spec-spec-file>
    <devops-service-spec-spec-file>source/api.cond.yaml</devops-service-spec-spec-file>
    <zdmcs-spec-spec-file>./source/api.cond.yaml</zdmcs-spec-spec-file>
    <service-catalog-spec-spec-file>source/service-catalog-api.cond.yaml</service-catalog-spec-spec-file>
    <dashboard-service-spec-spec-file>source/api.cond.yaml</dashboard-service-spec-spec-file>
    <ai-service-control-plane-spec-spec-file>source/api.cond.yaml</ai-service-control-plane-spec-spec-file>
    <oci-certs-dp-api-spec-spec-file>source/oci-certs-dp-api-spec.cond.yaml</oci-certs-dp-api-spec-spec-file>
    <oci-certs-cp-api-spec-spec-file>source/oci-certs-cp-api-spec.cond.yaml</oci-certs-cp-api-spec-spec-file>
    <vbs-controlplane-instance-spec-spec-file>source/api.cond.yaml</vbs-controlplane-instance-spec-spec-file>
    <queue-spec-spec-file>source/api.cond.yaml</queue-spec-spec-file>
    <sparkline-service-spec-spec-file>source/api.cond.yaml</sparkline-service-spec-spec-file>
    <apm-config-api-spec-file>source/api.cond.yaml</apm-config-api-spec-file>
    <waf-control-plane-spec-spec-file>source/api.cond.yaml</waf-control-plane-spec-spec-file>
    <dbtools-service-api-spec-spec-file>source/api.cond.yaml</dbtools-service-api-spec-spec-file>
    <ad-control-plane-spec-spec-file>source/api.cond.yaml</ad-control-plane-spec-spec-file>
    <ocm-discovery-spec-spec-file>source/api.cond.yaml</ocm-discovery-spec-spec-file>
    <identity-data-plane-api-spec-spec-file>source/identity-data-plane-api-spec.cond.yaml</identity-data-plane-api-spec-spec-file>
    <dls-data-plane-spec-spec-file>source/api.cond.yaml</dls-data-plane-spec-spec-file>
    <data-labeling-service-spec-spec-file>source/api.cond.yaml</data-labeling-service-spec-spec-file>
    <sdk-spec-spec-file>source/dcms-api.cond.yaml</sdk-spec-spec-file>
    <ocm-migration-spec-spec-file>source/api.cond.yaml</ocm-migration-spec-spec-file>
    <inframon-query-spec-spec-file>source/api.cond.yaml</inframon-query-spec-spec-file>
    <identity-data-plane-api-spec-preview-spec-file>source/identity-data-plane-api-spec.cond.yaml</identity-data-plane-api-spec-preview-spec-file>
    <vb-cp-apiserver-user-spec-spec-file>source/api.cond.yaml</vb-cp-apiserver-user-spec-spec-file>
    <service-manager-proxy-spec-spec-file>source/service-manager-proxy.api.cond.yaml</service-manager-proxy-spec-spec-file>
    <speech-service-control-plane-spec-spec-file>source/api.cond.yaml</speech-service-control-plane-spec-spec-file>
    <ocm-inventory-spec-spec-file>source/api.cond.yaml</ocm-inventory-spec-spec-file>
    <inframon-control-plane-spec-spec-file>source/api.cond.yaml</inframon-control-plane-spec-spec-file>
    <mesh-public-api-spec-spec-file>source/api.cond.yaml</mesh-public-api-spec-spec-file>
    <fa-control-plane-spec-spec-file>source/api.cond.yaml</fa-control-plane-spec-spec-file>
    <osp-gateway-api-spec-spec-file>source/osp-gateway-20191001-api.cond.yaml</osp-gateway-api-spec-spec-file>
    <threat-intel-control-plane-spec-spec-file>source/api.cond.yaml</threat-intel-control-plane-spec-spec-file>
    <stack-monitoring-spec-spec-file>source/api.cond.yaml</stack-monitoring-spec-spec-file>
    <announcements-spec-spec-file>source/announcement-service.cond.yaml</announcements-spec-spec-file>
    <vision-service-api-spec-spec-file>source/api.cond.yaml</vision-service-api-spec-spec-file>
    <network-firewall-public-spec-spec-file>source/api.cond.yaml</network-firewall-public-spec-spec-file>
    <management-plane-spec-spec-file>source/api.cond.yaml</management-plane-spec-spec-file>
    <dig-media-spec-spec-file>source/api.cond.yaml</dig-media-spec-spec-file>
    <onesubscription-gateway-spec-usagecomputation21-spec-file>source/swagger-usagecomputation-20210501.cond.yaml</onesubscription-gateway-spec-usagecomputation21-spec-file>
    <onesubscription-gateway-spec-subscription21-spec-file>source/swagger-subscription-20210501.cond.yaml</onesubscription-gateway-spec-subscription21-spec-file>
    <onesubscription-gateway-spec-organizationsubscription-spec-file>source/swagger-organizationsubscription-20210501.cond.yaml</onesubscription-gateway-spec-organizationsubscription-spec-file>
    <onesubscription-gateway-spec-billingschedule-spec-file>source/swagger-billingschedule-20210501.cond.yaml</onesubscription-gateway-spec-billingschedule-spec-file>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>timestamp-property</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <name>current.year</name>
              <pattern>yyyy</pattern>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.oci.sdk.utilities</groupId>
        <artifactId>dex-get-spec-artifact-plugin</artifactId>
        <version>${oci.get.spec.artifact.plugin.version}</version>
        <executions>
          <execution>
            <id>unpack-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons</groupId>
                  <artifactId>coreservices-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/coreservices-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.identity</groupId>
                  <artifactId>identity-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/identity-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.casper</groupId>
                  <artifactId>casper-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/casper-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.lb</groupId>
                  <artifactId>oralb-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oralb-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dbaas</groupId>
                  <artifactId>dbaas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dbaas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ffsw</groupId>
                  <artifactId>fss-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fss-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.sherlock</groupId>
                  <artifactId>hemlock-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/hemlock-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.email</groupId>
                  <artifactId>email-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/email-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dns.pub</groupId>
                  <artifactId>public-dns-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/public-dns-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.orchestration.orm</groupId>
                  <artifactId>maestro-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/maestro-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.kms</groupId>
                  <artifactId>kms-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/kms-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.query</groupId>
                  <artifactId>resource-query-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/resource-query-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.clusters</groupId>
                  <artifactId>clusters-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/clusters-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.telemetry.api</groupId>
                  <artifactId>telemetry-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/telemetry-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons.workrequests</groupId>
                  <artifactId>workrequests-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/workrequests-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ons</groupId>
                  <artifactId>ons-gateway-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ons-gateway-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci</groupId>
                  <artifactId>healthchecks-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/healthchecks-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.oss</groupId>
                  <artifactId>rest-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/rest-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oracache</groupId>
                  <artifactId>oracache-public-api</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oracache-public-api</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-marketplace-consumer-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.marketplace</groupId>
                  <artifactId>marketplace-consumer-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/marketplace-consumer-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.autoscaling.api</groupId>
                  <artifactId>autoscaling-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/autoscaling-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.usage</groupId>
                  <artifactId>usage-proxy-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/usage-proxy-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.announcements</groupId>
                  <artifactId>announcements-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/announcements-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.waas</groupId>
                  <artifactId>oci-waas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-waas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.obcs</groupId>
                  <artifactId>batchservice-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/batchservice-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.functions</groupId>
                  <artifactId>fn-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fn-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.usage.budgets</groupId>
                  <artifactId>budgets-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/budgets-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.quotas</groupId>
                  <artifactId>quotas-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/quotas-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-digital-assistant-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.oda.cp</groupId>
                  <artifactId>digital-assistant-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/digital-assistant-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-csg-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.csg</groupId>
                  <artifactId>csg-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/csg-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.rhino</groupId>
                  <artifactId>dts-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dts-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.apigw</groupId>
                  <artifactId>public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.events</groupId>
                  <artifactId>events-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/events-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-cloud-incident-management-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.custops.cims</groupId>
                  <artifactId>cloud-incident-management-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/cloud-incident-management-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ndcs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oracle.nosql.oci.controlplane</groupId>
                  <artifactId>ndcs-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ndcs-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-datacatalog-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dcat</groupId>
                  <artifactId>datacatalog-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/datacatalog-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.cec.provisioning.controlplane</groupId>
                  <artifactId>cec-public-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/cec-public-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-odsc-pegasus-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.odsc.pegasus</groupId>
                  <artifactId>odsc-pegasus-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/odsc-pegasus-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-bds-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.bds</groupId>
                  <artifactId>bds-cp-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/bds-cp-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-analytics-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.analytics</groupId>
                  <artifactId>analytics-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/analytics-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oracle-integration-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oracleintegration.spec</groupId>
                  <artifactId>oracle-integration-cp-apiserver-user-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oracle-integration-cp-apiserver-user-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-kam-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.kam</groupId>
                  <artifactId>kam-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/kam-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-osms-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.osms.api</groupId>
                  <artifactId>osms-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/osms-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ams-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.migration.application</groupId>
                  <artifactId>ams-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ams-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-service_api_spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oracle.dfcs.server</groupId>
                  <artifactId>service_api_spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/service_api_spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-mysqlaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.mysql</groupId>
                  <artifactId>mysqlaas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/mysqlaas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-sms-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocisms.dataplane</groupId>
                  <artifactId>oci-sms-dp-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-sms-dp-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-sms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocisms.controlplane</groupId>
                  <artifactId>oci-sms-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-sms-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oracle-blockchain-platform-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.blockchain</groupId>
                  <artifactId>oracle-blockchain-platform-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oracle-blockchain-platform-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.ads.admin.cp</groupId>
                  <artifactId>ads-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ads-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-compliance-document-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.compdocs</groupId>
                  <artifactId>compliance-document-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/compliance-document-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dis-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.dis</groupId>
                  <artifactId>dis-sdk-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dis-sdk-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hydra-controlplane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.hydra.controlplane</groupId>
                  <artifactId>hydra-controlplane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/hydra-controlplane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-vmware-provision-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.vmware.ocvp</groupId>
                  <artifactId>vmware-provision-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/vmware-provision-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-usage-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.metering.usagestore.api</groupId>
                  <artifactId>usage-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/usage-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-cloudguard-cp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.cloudguard</groupId>
                  <artifactId>cloudguard-cp-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/cloudguard-cp-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-opsi-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.opsi.api</groupId>
                  <artifactId>opsi-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/opsi-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-management-dashboard-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dashx</groupId>
                  <artifactId>management-dashboard-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/management-dashboard-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-connectors-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.connectors</groupId>
                  <artifactId>connectors-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/connectors-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-optimizer-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.optimizer</groupId>
                  <artifactId>optimizer-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/optimizer-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-mgmtagent-cloud-services-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.macs</groupId>
                  <artifactId>mgmtagent-cloud-services-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/mgmtagent-cloud-services-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-instance-agent-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.compute.ias</groupId>
                  <artifactId>instance-agent-service-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/instance-agent-service-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hydra-pika-frontend-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.hydra.pika.frontend</groupId>
                  <artifactId>hydra-pika-frontend-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/hydra-pika-frontend-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-bastions-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocibstn.controlplane.resources</groupId>
                  <artifactId>oci-bastions-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-bastions-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ibex-frontend-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.hydra.ibex</groupId>
                  <artifactId>ibex-frontend-public-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ibex-frontend-public-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-rover-cloud-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.rover</groupId>
                  <artifactId>rover-cloud-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/rover-cloud-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-logan-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.loganalytics.api</groupId>
                  <artifactId>logan-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/logan-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-customer-controlled-access-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.db.cca</groupId>
                  <artifactId>customer-controlled-access-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/customer-controlled-access-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ggs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.ggs</groupId>
                  <artifactId>ggs-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ggs-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-tenant-manager-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.accmgmt.tenantmgr.controlplane</groupId>
                  <artifactId>tenant-manager-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/tenant-manager-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dbmgmt-dbadmin-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.dpd.dbmgmt.api</groupId>
                  <artifactId>dbmgmt-dbadmin-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dbmgmt-dbadmin-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-aj-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.aj</groupId>
                  <artifactId>aj-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/aj-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-apm-synapi-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.apm.service.synapi</groupId>
                  <artifactId>apm-synapi-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/apm-synapi-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-artifacts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.artifacts</groupId>
                  <artifactId>artifacts-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/artifacts-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-vss-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.vss</groupId>
                  <artifactId>vss-cp-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/vss-cp-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-network-load-balancer-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.nlb</groupId>
                  <artifactId>network-load-balancer-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/network-load-balancer-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-cloudbridge-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.cloudbridge</groupId>
                  <artifactId>cloudbridge-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/cloudbridge-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-apm-dataserver-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.apm.service.dataserver.spec</groupId>
                  <artifactId>apm-dataserver-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/apm-dataserver-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-escs-sm-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.exascale</groupId>
                  <artifactId>escs-sm-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/escs-sm-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-apm-controller-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.apm.controller.spec</groupId>
                  <artifactId>apm-controller-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/apm-controller-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-generic-artifacts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.artifacts.generic</groupId>
                  <artifactId>generic-artifacts-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/generic-artifacts-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-msz-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.msz</groupId>
                  <artifactId>msz-cp-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/msz-cp-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dbrs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dbrs</groupId>
                  <artifactId>dbrs-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dbrs-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-devops-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dlc</groupId>
                  <artifactId>devops-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/devops-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-zdmcs-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.zdmcs</groupId>
                  <artifactId>zdmcs-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/zdmcs-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-service-catalog-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.servicecatalog</groupId>
                  <artifactId>service-catalog-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/service-catalog-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dashboard-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dashboard</groupId>
                  <artifactId>dashboard-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dashboard-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ai-service-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocas</groupId>
                  <artifactId>ai-service-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ai-service-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-certs-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocicerts.dataplane</groupId>
                  <artifactId>oci-certs-dp-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-certs-dp-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-certs-cp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocicerts.controlplane</groupId>
                  <artifactId>oci-certs-cp-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-certs-cp-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-vbs-controlplane-instance-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.vbs.instance</groupId>
                  <artifactId>vbs-controlplane-instance-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/vbs-controlplane-instance-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-queue-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.queue.cp</groupId>
                  <artifactId>queue-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/queue-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-sparkline-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oracle.sparkline.dlap</groupId>
                  <artifactId>sparkline-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/sparkline-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-apm-config-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.apm.service.config</groupId>
                  <artifactId>apm-config-api</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/apm-config-api</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-waf-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.waf.controlplane</groupId>
                  <artifactId>waf-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/waf-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dbtools-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dbtools</groupId>
                  <artifactId>dbtools-service-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dbtools-service-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ad-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocas</groupId>
                  <artifactId>ad-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ad-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ocm-discovery-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocm.discovery</groupId>
                  <artifactId>ocm-discovery-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ocm-discovery-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-identity-data-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.identity</groupId>
                  <artifactId>identity-data-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/identity-data-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dls-data-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.dls.dp</groupId>
                  <artifactId>dls-data-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dls-data-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-data-labeling-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.dls.cp.dataset</groupId>
                  <artifactId>data-labeling-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/data-labeling-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.dcms-dp</groupId>
                  <artifactId>sdk-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/sdk-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ocm-migration-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocm.migration</groupId>
                  <artifactId>ocm-migration-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ocm-migration-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-inframon-query-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.inframon.query</groupId>
                  <artifactId>inframon-query-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/inframon-query-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-identity-data-plane-api-spec-preview</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.identity</groupId>
                  <artifactId>identity-data-plane-api-spec-preview</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/identity-data-plane-api-spec-preview</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-vb-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.vb.cp.spec</groupId>
                  <artifactId>vb-cp-apiserver-user-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/vb-cp-apiserver-user-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-service-manager-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.smproxy</groupId>
                  <artifactId>service-manager-proxy-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/service-manager-proxy-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-speech-service-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocas.speech</groupId>
                  <artifactId>speech-service-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/speech-service-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ocm-inventory-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.inventory</groupId>
                  <artifactId>ocm-inventory-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ocm-inventory-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-inframon-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.inframon.cp</groupId>
                  <artifactId>inframon-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/inframon-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-mesh-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.mesh</groupId>
                  <artifactId>mesh-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/mesh-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fa-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.facontrolplane</groupId>
                  <artifactId>fa-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fa-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-osp-gateway-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.store</groupId>
                  <artifactId>osp-gateway-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/osp-gateway-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-threat-intel-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.threatintelcp</groupId>
                  <artifactId>threat-intel-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/threat-intel-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-stack-monitoring-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.stackmonitoring</groupId>
                  <artifactId>stack-monitoring-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/stack-monitoring-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-announcements-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.announcements</groupId>
                  <artifactId>announcements-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/announcements-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-vision-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocas.vision</groupId>
                  <artifactId>vision-service-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/vision-service-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-network-firewall-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.nfw.public</groupId>
                  <artifactId>network-firewall-public-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/network-firewall-public-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-management-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.elasticsearch.mp</groupId>
                  <artifactId>management-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/management-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dig-media-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.dmp</groupId>
                  <artifactId>dig-media-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dig-media-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-onesubscription-gateway-spec-usagecomputation21</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oal.oracle.apps.csa.service.api</groupId>
                  <artifactId>onesubscription-gateway-spec-usagecomputation21</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/onesubscription-gateway-spec-usagecomputation21</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-onesubscription-gateway-spec-subscription21</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oal.oracle.apps.csa.service.api</groupId>
                  <artifactId>onesubscription-gateway-spec-subscription21</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/onesubscription-gateway-spec-subscription21</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-onesubscription-gateway-spec-organizationsubscription</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oal.oracle.apps.csa.service.api</groupId>
                  <artifactId>onesubscription-gateway-spec-organizationsubscription</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/onesubscription-gateway-spec-organizationsubscription</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-onesubscription-gateway-spec-billingschedule</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oal.oracle.apps.csa.service.api</groupId>
                  <artifactId>onesubscription-gateway-spec-billingschedule</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/onesubscription-gateway-spec-billingschedule</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.oci.sdk.utilities</groupId>
        <artifactId>spec-conditionals-preprocessor-plugin</artifactId>
        <version>${preprocessor-version}</version>
        <executions>
          <execution>
            <id>spec-conditionals-prefer-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/source/${coreservices-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec/source/${identity-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/casper-api-spec/source/${casper-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oralb-api-spec/source/${oralb-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/source/${dbaas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fss-api-spec/source/${fss-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/hemlock-spec/source/${hemlock-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/email-api-spec/source/${email-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/source/${public-dns-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/maestro-spec/source/${maestro-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/maestro-spec/${maestro-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/maestro-spec/${maestro-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/maestro-spec/${maestro-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/maestro-spec/${maestro-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/kms-api-spec/source/${kms-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/source/${resource-query-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/clusters-api-spec/source/${clusters-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/telemetry-public-api-spec/source/${telemetry-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/workrequests-api-spec/source/${workrequests-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ons-gateway-spec/source/${ons-gateway-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/source/${healthchecks-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/rest-api-spec/source/${rest-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oracache-public-api/source/${oracache-public-api-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-marketplace-consumer-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/marketplace-consumer-service-spec/source/${marketplace-consumer-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-marketplace-consumer-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/autoscaling-public-api-spec/source/${autoscaling-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/usage-proxy-spec/source/${usage-proxy-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/announcements-service-spec/source/${announcements-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/source/${oci-waas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/batchservice-api-spec/source/${batchservice-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fn-api-spec/source/${fn-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/budgets-control-plane-spec/source/${budgets-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/quotas-control-plane-api-spec/source/${quotas-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-digital-assistant-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/digital-assistant-spec/source/${digital-assistant-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-digital-assistant-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-csg-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/csg-api-spec/source/${csg-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-csg-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dts-api-spec/source/${dts-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/public-api-spec/source/${public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/public-api-spec/${public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/public-api-spec/${public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/public-api-spec/${public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/public-api-spec/${public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/events-control-plane-spec/source/${events-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-cloud-incident-management-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/cloud-incident-management-service-spec/source/${cloud-incident-management-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-cloud-incident-management-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ndcs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ndcs-control-plane-spec/source/${ndcs-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ndcs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-datacatalog-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/datacatalog-api-spec/source/${datacatalog-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-datacatalog-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/cec-public-spec/source/${cec-public-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-odsc-pegasus-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/odsc-pegasus-control-plane-spec/source/${odsc-pegasus-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-odsc-pegasus-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-bds-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/bds-cp-spec/source/${bds-cp-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-bds-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-analytics-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/analytics-control-plane-api-spec/source/${analytics-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-analytics-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oracle-integration-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oracle-integration-cp-apiserver-user-spec/source/${oracle-integration-cp-apiserver-user-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oracle-integration-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-kam-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/kam-api-spec/source/${kam-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-kam-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-osms-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/osms-spec/source/${osms-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/osms-spec/${osms-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/osms-spec/${osms-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-osms-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/osms-spec/${osms-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/osms-spec/${osms-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ams-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ams-spec/source/${ams-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ams-spec/${ams-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ams-spec/${ams-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ams-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ams-spec/${ams-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ams-spec/${ams-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-service_api_spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/service_api_spec/source/${service_api_spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/service_api_spec/${service_api_spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/service_api_spec/${service_api_spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-service_api_spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/service_api_spec/${service_api_spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/service_api_spec/${service_api_spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-mysqlaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/mysqlaas-api-spec/source/${mysqlaas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-mysqlaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-sms-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-sms-dp-api-spec/source/${oci-sms-dp-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-sms-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-sms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-sms-api-spec/source/${oci-sms-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-sms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oracle-blockchain-platform-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oracle-blockchain-platform-spec/source/${oracle-blockchain-platform-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oracle-blockchain-platform-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ads-control-plane-spec/source/${ads-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-compliance-document-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/compliance-document-service-spec/source/${compliance-document-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-compliance-document-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dis-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dis-sdk-spec/source/${dis-sdk-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dis-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-hydra-controlplane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/hydra-controlplane-api-spec/source/${hydra-controlplane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-hydra-controlplane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-vmware-provision-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/vmware-provision-service-spec/source/${vmware-provision-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/vmware-provision-service-spec/${vmware-provision-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/vmware-provision-service-spec/${vmware-provision-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-vmware-provision-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/vmware-provision-service-spec/${vmware-provision-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/vmware-provision-service-spec/${vmware-provision-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-usage-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/usage-api-spec/source/${usage-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/usage-api-spec/${usage-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/usage-api-spec/${usage-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-usage-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/usage-api-spec/${usage-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/usage-api-spec/${usage-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-cloudguard-cp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/cloudguard-cp-api-spec/source/${cloudguard-cp-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/cloudguard-cp-api-spec/${cloudguard-cp-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/cloudguard-cp-api-spec/${cloudguard-cp-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-cloudguard-cp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/cloudguard-cp-api-spec/${cloudguard-cp-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/cloudguard-cp-api-spec/${cloudguard-cp-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-opsi-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/opsi-api-spec/source/${opsi-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/opsi-api-spec/${opsi-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/opsi-api-spec/${opsi-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-opsi-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/opsi-api-spec/${opsi-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/opsi-api-spec/${opsi-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-management-dashboard-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/management-dashboard-spec/source/${management-dashboard-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/management-dashboard-spec/${management-dashboard-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/management-dashboard-spec/${management-dashboard-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-management-dashboard-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/management-dashboard-spec/${management-dashboard-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/management-dashboard-spec/${management-dashboard-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-connectors-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/connectors-spec/source/${connectors-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/connectors-spec/${connectors-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/connectors-spec/${connectors-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-connectors-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/connectors-spec/${connectors-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/connectors-spec/${connectors-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-optimizer-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/optimizer-spec/source/${optimizer-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/optimizer-spec/${optimizer-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/optimizer-spec/${optimizer-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-optimizer-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/optimizer-spec/${optimizer-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/optimizer-spec/${optimizer-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-mgmtagent-cloud-services-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/mgmtagent-cloud-services-spec/source/${mgmtagent-cloud-services-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/mgmtagent-cloud-services-spec/${mgmtagent-cloud-services-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/mgmtagent-cloud-services-spec/${mgmtagent-cloud-services-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-mgmtagent-cloud-services-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/mgmtagent-cloud-services-spec/${mgmtagent-cloud-services-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/mgmtagent-cloud-services-spec/${mgmtagent-cloud-services-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-instance-agent-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/instance-agent-service-api-spec/source/${instance-agent-service-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/instance-agent-service-api-spec/${instance-agent-service-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/instance-agent-service-api-spec/${instance-agent-service-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-instance-agent-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/instance-agent-service-api-spec/${instance-agent-service-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/instance-agent-service-api-spec/${instance-agent-service-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-hydra-pika-frontend-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/hydra-pika-frontend-public-api-spec/source/${hydra-pika-frontend-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/hydra-pika-frontend-public-api-spec/${hydra-pika-frontend-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/hydra-pika-frontend-public-api-spec/${hydra-pika-frontend-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-hydra-pika-frontend-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/hydra-pika-frontend-public-api-spec/${hydra-pika-frontend-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/hydra-pika-frontend-public-api-spec/${hydra-pika-frontend-public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-bastions-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-bastions-spec/source/${oci-bastions-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-bastions-spec/${oci-bastions-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-bastions-spec/${oci-bastions-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-bastions-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-bastions-spec/${oci-bastions-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-bastions-spec/${oci-bastions-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ibex-frontend-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ibex-frontend-public-spec/source/${ibex-frontend-public-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ibex-frontend-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-rover-cloud-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/rover-cloud-service-spec/source/${rover-cloud-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/rover-cloud-service-spec/${rover-cloud-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/rover-cloud-service-spec/${rover-cloud-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-rover-cloud-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/rover-cloud-service-spec/${rover-cloud-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/rover-cloud-service-spec/${rover-cloud-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-logan-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/logan-api-spec/source/${logan-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/logan-api-spec/${logan-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/logan-api-spec/${logan-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-logan-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/logan-api-spec/${logan-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/logan-api-spec/${logan-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-customer-controlled-access-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/customer-controlled-access-spec/source/${customer-controlled-access-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/customer-controlled-access-spec/${customer-controlled-access-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/customer-controlled-access-spec/${customer-controlled-access-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-customer-controlled-access-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/customer-controlled-access-spec/${customer-controlled-access-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/customer-controlled-access-spec/${customer-controlled-access-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ggs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ggs-control-plane-spec/source/${ggs-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ggs-control-plane-spec/${ggs-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ggs-control-plane-spec/${ggs-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ggs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ggs-control-plane-spec/${ggs-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ggs-control-plane-spec/${ggs-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-tenant-manager-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/tenant-manager-spec/source/${tenant-manager-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/tenant-manager-spec/${tenant-manager-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/tenant-manager-spec/${tenant-manager-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-tenant-manager-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/tenant-manager-spec/${tenant-manager-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/tenant-manager-spec/${tenant-manager-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dbmgmt-dbadmin-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dbmgmt-dbadmin-spec/source/${dbmgmt-dbadmin-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dbmgmt-dbadmin-spec/${dbmgmt-dbadmin-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dbmgmt-dbadmin-spec/${dbmgmt-dbadmin-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dbmgmt-dbadmin-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dbmgmt-dbadmin-spec/${dbmgmt-dbadmin-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dbmgmt-dbadmin-spec/${dbmgmt-dbadmin-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-aj-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/aj-control-plane-spec/source/${aj-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/aj-control-plane-spec/${aj-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/aj-control-plane-spec/${aj-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-aj-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/aj-control-plane-spec/${aj-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/aj-control-plane-spec/${aj-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-apm-synapi-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/apm-synapi-spec/source/${apm-synapi-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/apm-synapi-spec/${apm-synapi-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/apm-synapi-spec/${apm-synapi-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-apm-synapi-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/apm-synapi-spec/${apm-synapi-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/apm-synapi-spec/${apm-synapi-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-artifacts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/artifacts-api-spec/source/${artifacts-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/artifacts-api-spec/${artifacts-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/artifacts-api-spec/${artifacts-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-artifacts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/artifacts-api-spec/${artifacts-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/artifacts-api-spec/${artifacts-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-vss-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/vss-cp-spec/source/${vss-cp-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/vss-cp-spec/${vss-cp-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/vss-cp-spec/${vss-cp-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-vss-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/vss-cp-spec/${vss-cp-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/vss-cp-spec/${vss-cp-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-network-load-balancer-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/network-load-balancer-spec/source/${network-load-balancer-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/network-load-balancer-spec/${network-load-balancer-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/network-load-balancer-spec/${network-load-balancer-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-network-load-balancer-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/network-load-balancer-spec/${network-load-balancer-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/network-load-balancer-spec/${network-load-balancer-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-cloudbridge-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/cloudbridge-spec/source/${cloudbridge-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/cloudbridge-spec/${cloudbridge-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/cloudbridge-spec/${cloudbridge-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-cloudbridge-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/cloudbridge-spec/${cloudbridge-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/cloudbridge-spec/${cloudbridge-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-apm-dataserver-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/apm-dataserver-spec/source/${apm-dataserver-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/apm-dataserver-spec/${apm-dataserver-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/apm-dataserver-spec/${apm-dataserver-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-apm-dataserver-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/apm-dataserver-spec/${apm-dataserver-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/apm-dataserver-spec/${apm-dataserver-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-escs-sm-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/escs-sm-spec/source/${escs-sm-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/escs-sm-spec/${escs-sm-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/escs-sm-spec/${escs-sm-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-escs-sm-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/escs-sm-spec/${escs-sm-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/escs-sm-spec/${escs-sm-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-apm-controller-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/apm-controller-spec/source/${apm-controller-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/apm-controller-spec/${apm-controller-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/apm-controller-spec/${apm-controller-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-apm-controller-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/apm-controller-spec/${apm-controller-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/apm-controller-spec/${apm-controller-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-generic-artifacts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/generic-artifacts-api-spec/source/${generic-artifacts-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/generic-artifacts-api-spec/${generic-artifacts-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/generic-artifacts-api-spec/${generic-artifacts-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-generic-artifacts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/generic-artifacts-api-spec/${generic-artifacts-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/generic-artifacts-api-spec/${generic-artifacts-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-msz-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/msz-cp-spec/source/${msz-cp-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/msz-cp-spec/${msz-cp-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/msz-cp-spec/${msz-cp-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-msz-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/msz-cp-spec/${msz-cp-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/msz-cp-spec/${msz-cp-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dbrs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dbrs-control-plane-spec/source/${dbrs-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dbrs-control-plane-spec/${dbrs-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dbrs-control-plane-spec/${dbrs-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dbrs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dbrs-control-plane-spec/${dbrs-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dbrs-control-plane-spec/${dbrs-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-devops-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/devops-service-spec/source/${devops-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/devops-service-spec/${devops-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/devops-service-spec/${devops-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-devops-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/devops-service-spec/${devops-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/devops-service-spec/${devops-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-zdmcs-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/zdmcs-spec/source/${zdmcs-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/zdmcs-spec/${zdmcs-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/zdmcs-spec/${zdmcs-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-zdmcs-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/zdmcs-spec/${zdmcs-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/zdmcs-spec/${zdmcs-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-service-catalog-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/service-catalog-spec/source/${service-catalog-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/service-catalog-spec/${service-catalog-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/service-catalog-spec/${service-catalog-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-service-catalog-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/service-catalog-spec/${service-catalog-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/service-catalog-spec/${service-catalog-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dashboard-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dashboard-service-spec/source/${dashboard-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dashboard-service-spec/${dashboard-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dashboard-service-spec/${dashboard-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dashboard-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dashboard-service-spec/${dashboard-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dashboard-service-spec/${dashboard-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ai-service-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ai-service-control-plane-spec/source/${ai-service-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ai-service-control-plane-spec/${ai-service-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ai-service-control-plane-spec/${ai-service-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ai-service-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ai-service-control-plane-spec/${ai-service-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ai-service-control-plane-spec/${ai-service-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-certs-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-certs-dp-api-spec/source/${oci-certs-dp-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-certs-dp-api-spec/${oci-certs-dp-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-certs-dp-api-spec/${oci-certs-dp-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-certs-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-certs-dp-api-spec/${oci-certs-dp-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-certs-dp-api-spec/${oci-certs-dp-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-certs-cp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-certs-cp-api-spec/source/${oci-certs-cp-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-certs-cp-api-spec/${oci-certs-cp-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-certs-cp-api-spec/${oci-certs-cp-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-certs-cp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-certs-cp-api-spec/${oci-certs-cp-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-certs-cp-api-spec/${oci-certs-cp-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-vbs-controlplane-instance-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/vbs-controlplane-instance-spec/source/${vbs-controlplane-instance-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/vbs-controlplane-instance-spec/${vbs-controlplane-instance-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/vbs-controlplane-instance-spec/${vbs-controlplane-instance-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-vbs-controlplane-instance-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/vbs-controlplane-instance-spec/${vbs-controlplane-instance-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/vbs-controlplane-instance-spec/${vbs-controlplane-instance-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-queue-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/queue-spec/source/${queue-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/queue-spec/${queue-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/queue-spec/${queue-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-queue-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/queue-spec/${queue-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/queue-spec/${queue-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-sparkline-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/sparkline-service-spec/source/${sparkline-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/sparkline-service-spec/${sparkline-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/sparkline-service-spec/${sparkline-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-sparkline-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/sparkline-service-spec/${sparkline-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/sparkline-service-spec/${sparkline-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-apm-config-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/apm-config-api/source/${apm-config-api-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/apm-config-api/${apm-config-api-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/apm-config-api/${apm-config-api-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-apm-config-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/apm-config-api/${apm-config-api-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/apm-config-api/${apm-config-api-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-waf-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/waf-control-plane-spec/source/${waf-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/waf-control-plane-spec/${waf-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/waf-control-plane-spec/${waf-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-waf-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/waf-control-plane-spec/${waf-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/waf-control-plane-spec/${waf-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dbtools-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dbtools-service-api-spec/source/${dbtools-service-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dbtools-service-api-spec/${dbtools-service-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dbtools-service-api-spec/${dbtools-service-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dbtools-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dbtools-service-api-spec/${dbtools-service-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dbtools-service-api-spec/${dbtools-service-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ad-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ad-control-plane-spec/source/${ad-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ad-control-plane-spec/${ad-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ad-control-plane-spec/${ad-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ad-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ad-control-plane-spec/${ad-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ad-control-plane-spec/${ad-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ocm-discovery-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ocm-discovery-spec/source/${ocm-discovery-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ocm-discovery-spec/${ocm-discovery-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ocm-discovery-spec/${ocm-discovery-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ocm-discovery-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ocm-discovery-spec/${ocm-discovery-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ocm-discovery-spec/${ocm-discovery-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-identity-data-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/identity-data-plane-api-spec/source/${identity-data-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/identity-data-plane-api-spec/${identity-data-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/identity-data-plane-api-spec/${identity-data-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-identity-data-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/identity-data-plane-api-spec/${identity-data-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/identity-data-plane-api-spec/${identity-data-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dls-data-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dls-data-plane-spec/source/${dls-data-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dls-data-plane-spec/${dls-data-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dls-data-plane-spec/${dls-data-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dls-data-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dls-data-plane-spec/${dls-data-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dls-data-plane-spec/${dls-data-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-data-labeling-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/data-labeling-service-spec/source/${data-labeling-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/data-labeling-service-spec/${data-labeling-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/data-labeling-service-spec/${data-labeling-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-data-labeling-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/data-labeling-service-spec/${data-labeling-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/data-labeling-service-spec/${data-labeling-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/sdk-spec/source/${sdk-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/sdk-spec/${sdk-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/sdk-spec/${sdk-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/sdk-spec/${sdk-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/sdk-spec/${sdk-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ocm-migration-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ocm-migration-spec/source/${ocm-migration-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ocm-migration-spec/${ocm-migration-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ocm-migration-spec/${ocm-migration-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ocm-migration-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ocm-migration-spec/${ocm-migration-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ocm-migration-spec/${ocm-migration-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-inframon-query-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/inframon-query-spec/source/${inframon-query-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/inframon-query-spec/${inframon-query-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/inframon-query-spec/${inframon-query-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-inframon-query-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/inframon-query-spec/${inframon-query-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/inframon-query-spec/${inframon-query-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-identity-data-plane-api-spec-preview</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/identity-data-plane-api-spec-preview/source/${identity-data-plane-api-spec-preview-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/identity-data-plane-api-spec-preview/${identity-data-plane-api-spec-preview-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/identity-data-plane-api-spec-preview/${identity-data-plane-api-spec-preview-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-identity-data-plane-api-spec-preview</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/identity-data-plane-api-spec-preview/${identity-data-plane-api-spec-preview-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/identity-data-plane-api-spec-preview/${identity-data-plane-api-spec-preview-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-vb-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/vb-cp-apiserver-user-spec/source/${vb-cp-apiserver-user-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/vb-cp-apiserver-user-spec/${vb-cp-apiserver-user-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/vb-cp-apiserver-user-spec/${vb-cp-apiserver-user-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-vb-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/vb-cp-apiserver-user-spec/${vb-cp-apiserver-user-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/vb-cp-apiserver-user-spec/${vb-cp-apiserver-user-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-service-manager-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/service-manager-proxy-spec/source/${service-manager-proxy-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/service-manager-proxy-spec/${service-manager-proxy-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/service-manager-proxy-spec/${service-manager-proxy-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-service-manager-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/service-manager-proxy-spec/${service-manager-proxy-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/service-manager-proxy-spec/${service-manager-proxy-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-speech-service-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/speech-service-control-plane-spec/source/${speech-service-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/speech-service-control-plane-spec/${speech-service-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/speech-service-control-plane-spec/${speech-service-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-speech-service-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/speech-service-control-plane-spec/${speech-service-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/speech-service-control-plane-spec/${speech-service-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ocm-inventory-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ocm-inventory-spec/source/${ocm-inventory-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ocm-inventory-spec/${ocm-inventory-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ocm-inventory-spec/${ocm-inventory-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ocm-inventory-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ocm-inventory-spec/${ocm-inventory-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ocm-inventory-spec/${ocm-inventory-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-inframon-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/inframon-control-plane-spec/source/${inframon-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/inframon-control-plane-spec/${inframon-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/inframon-control-plane-spec/${inframon-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-inframon-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/inframon-control-plane-spec/${inframon-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/inframon-control-plane-spec/${inframon-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-mesh-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/mesh-public-api-spec/source/${mesh-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/mesh-public-api-spec/${mesh-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/mesh-public-api-spec/${mesh-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-mesh-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/mesh-public-api-spec/${mesh-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/mesh-public-api-spec/${mesh-public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-fa-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fa-control-plane-spec/source/${fa-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fa-control-plane-spec/${fa-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fa-control-plane-spec/${fa-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fa-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fa-control-plane-spec/${fa-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fa-control-plane-spec/${fa-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-osp-gateway-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/osp-gateway-api-spec/source/${osp-gateway-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/osp-gateway-api-spec/${osp-gateway-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/osp-gateway-api-spec/${osp-gateway-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-osp-gateway-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/osp-gateway-api-spec/${osp-gateway-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/osp-gateway-api-spec/${osp-gateway-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-threat-intel-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/threat-intel-control-plane-spec/source/${threat-intel-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/threat-intel-control-plane-spec/${threat-intel-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/threat-intel-control-plane-spec/${threat-intel-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-threat-intel-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/threat-intel-control-plane-spec/${threat-intel-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/threat-intel-control-plane-spec/${threat-intel-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-stack-monitoring-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/stack-monitoring-spec/source/${stack-monitoring-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/stack-monitoring-spec/${stack-monitoring-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/stack-monitoring-spec/${stack-monitoring-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-stack-monitoring-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/stack-monitoring-spec/${stack-monitoring-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/stack-monitoring-spec/${stack-monitoring-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-announcements-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/announcements-spec/source/${announcements-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/announcements-spec/${announcements-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/announcements-spec/${announcements-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-announcements-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/announcements-spec/${announcements-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/announcements-spec/${announcements-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-vision-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/vision-service-api-spec/source/${vision-service-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/vision-service-api-spec/${vision-service-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/vision-service-api-spec/${vision-service-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-vision-service-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/vision-service-api-spec/${vision-service-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/vision-service-api-spec/${vision-service-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-network-firewall-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/network-firewall-public-spec/source/${network-firewall-public-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/network-firewall-public-spec/${network-firewall-public-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/network-firewall-public-spec/${network-firewall-public-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-network-firewall-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/network-firewall-public-spec/${network-firewall-public-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/network-firewall-public-spec/${network-firewall-public-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-management-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/management-plane-spec/source/${management-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/management-plane-spec/${management-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/management-plane-spec/${management-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-management-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/management-plane-spec/${management-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/management-plane-spec/${management-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dig-media-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dig-media-spec/source/${dig-media-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dig-media-spec/${dig-media-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dig-media-spec/${dig-media-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dig-media-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dig-media-spec/${dig-media-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dig-media-spec/${dig-media-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-onesubscription-gateway-spec-usagecomputation21</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/onesubscription-gateway-spec-usagecomputation21/source/${onesubscription-gateway-spec-usagecomputation21-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/onesubscription-gateway-spec-usagecomputation21/${onesubscription-gateway-spec-usagecomputation21-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/onesubscription-gateway-spec-usagecomputation21/${onesubscription-gateway-spec-usagecomputation21-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-onesubscription-gateway-spec-usagecomputation21</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/onesubscription-gateway-spec-usagecomputation21/${onesubscription-gateway-spec-usagecomputation21-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/onesubscription-gateway-spec-usagecomputation21/${onesubscription-gateway-spec-usagecomputation21-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-onesubscription-gateway-spec-subscription21</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/onesubscription-gateway-spec-subscription21/source/${onesubscription-gateway-spec-subscription21-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/onesubscription-gateway-spec-subscription21/${onesubscription-gateway-spec-subscription21-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/onesubscription-gateway-spec-subscription21/${onesubscription-gateway-spec-subscription21-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-onesubscription-gateway-spec-subscription21</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/onesubscription-gateway-spec-subscription21/${onesubscription-gateway-spec-subscription21-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/onesubscription-gateway-spec-subscription21/${onesubscription-gateway-spec-subscription21-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-onesubscription-gateway-spec-organizationsubscription</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/onesubscription-gateway-spec-organizationsubscription/source/${onesubscription-gateway-spec-organizationsubscription-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/onesubscription-gateway-spec-organizationsubscription/${onesubscription-gateway-spec-organizationsubscription-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/onesubscription-gateway-spec-organizationsubscription/${onesubscription-gateway-spec-organizationsubscription-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-onesubscription-gateway-spec-organizationsubscription</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/onesubscription-gateway-spec-organizationsubscription/${onesubscription-gateway-spec-organizationsubscription-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/onesubscription-gateway-spec-organizationsubscription/${onesubscription-gateway-spec-organizationsubscription-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-onesubscription-gateway-spec-billingschedule</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/onesubscription-gateway-spec-billingschedule/source/${onesubscription-gateway-spec-billingschedule-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/onesubscription-gateway-spec-billingschedule/${onesubscription-gateway-spec-billingschedule-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/onesubscription-gateway-spec-billingschedule/${onesubscription-gateway-spec-billingschedule-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-onesubscription-gateway-spec-billingschedule</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/onesubscription-gateway-spec-billingschedule/${onesubscription-gateway-spec-billingschedule-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/onesubscription-gateway-spec-billingschedule/${onesubscription-gateway-spec-billingschedule-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.bmc.sdk</groupId>
        <artifactId>bmc-sdk-swagger-maven-plugin</artifactId>
        <version>1.174-SNAPSHOT</version>
        <configuration>
          <isTestGenerationEnabled>true</isTestGenerationEnabled>
        </configuration>
        <executions>
          <execution>
            <id>go-public-sdk-identity-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <specGenerationType>${generationType}</specGenerationType>
              <basePackage>identity</basePackage>
              <additionalProperties>
                <specName>identity</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>identity</serviceHostName>
                <isTagAvailable.identity>true</isTagAvailable.identity>
              </additionalProperties>
              <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
              <featureIdConfigDir>${project.basedir}/codegenConfig/featureIds</featureIdConfigDir>
              <markAllPostPutAsEventuallyConsistentWithWindowSize>PT4M</markAllPostPutAsEventuallyConsistentWithWindowSize>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-coreservices-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>core</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>core</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
                <isTagAvailable.blockstorage>true</isTagAvailable.blockstorage>
                <isTagAvailable.compute>true</isTagAvailable.compute>
                <isTagAvailable.computemanagement>true</isTagAvailable.computemanagement>
                <isTagAvailable.virtualnetwork>true</isTagAvailable.virtualnetwork>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-casper-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>objectstorage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>objectstorage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>objectstorage</serviceHostName>
                <isTagAvailable.objectstorage>true</isTagAvailable.objectstorage>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oralb-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>loadbalancer</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>loadbalancer</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
                <isTagAvailable.loadbalancer>true</isTagAvailable.loadbalancer>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dbaas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>database</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>database</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>database</serviceHostName>
                <isTagAvailable.database>true</isTagAvailable.database>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-fss-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>filestorage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>filestorage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>filestorage</serviceHostName>
                <isTagAvailable.filestorage>true</isTagAvailable.filestorage>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-hemlock-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>audit</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>audit</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>audit</serviceHostName>
                <isTagAvailable.audit>true</isTagAvailable.audit>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-email-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>email</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>email</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>email</serviceHostName>
                <isTagAvailable.email>true</isTagAvailable.email>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-public-dns-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dns</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dns</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>dns</serviceHostName>
                <isTagAvailable.dns>true</isTagAvailable.dns>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-maestro-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/maestro-spec/${maestro-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>resourcemanager</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>resourcemanager</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>resourcemanager</serviceHostName>
                <isTagAvailable.resourcemanager>true</isTagAvailable.resourcemanager>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-kms-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>keymanagement</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>keymanagement</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>kms</serviceHostName>
                <isRegionalClient.kmscrypto>false</isRegionalClient.kmscrypto>
                <isRegionalClient.kmsmanagement>false</isRegionalClient.kmsmanagement>
                <isTagAvailable.kmscrypto>true</isTagAvailable.kmscrypto>
                <isTagAvailable.kmsmanagement>true</isTagAvailable.kmsmanagement>
                <isTagAvailable.kmsvault>true</isTagAvailable.kmsvault>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-resource-query-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>resourcesearch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>resourcesearch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>query</serviceHostName>
                <isTagAvailable.resourcesearch>true</isTagAvailable.resourcesearch>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-clusters-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <renamingConfigFile>${project.basedir}/renaming_configs/container_engine.yaml</renamingConfigFile>
              <additionalProperties>
                <specName>containerengine</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>containerengine</serviceHostName>
                <isTagAvailable.containerengine>true</isTagAvailable.containerengine>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-telemetry-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>monitoring</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>monitoring</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>telemetry</serviceHostName>
                <isTagAvailable.monitoring>true</isTagAvailable.monitoring>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-workrequests-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>workrequests</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>workrequests</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
                <isTagAvailable.workrequest>true</isTagAvailable.workrequest>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ons-gateway-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ons</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ons</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>notification</serviceHostName>
                <isTagAvailable.notificationcontrolplane>true</isTagAvailable.notificationcontrolplane>
                <isTagAvailable.notificationdataplane>true</isTagAvailable.notificationdataplane>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-healthchecks-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>healthchecks</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>healthchecks</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>healthchecks</serviceHostName>
                <isTagAvailable.healthchecks>true</isTagAvailable.healthchecks>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-rest-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>streaming</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>streaming</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>streams</serviceHostName>
                <isRegionalClient.stream>false</isRegionalClient.stream>
                <isTagAvailable.stream>true</isTagAvailable.stream>
                <isTagAvailable.streamadmin>true</isTagAvailable.streamadmin>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oracache-public-api</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>cache</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>cache</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>caching</serviceHostName>
                <isTagAvailable.oracache>true</isTagAvailable.oracache>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-marketplace-consumer-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>marketplace</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>marketplace</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>marketplace</serviceHostName>
                <isTagAvailable.marketplace>true</isTagAvailable.marketplace>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-autoscaling-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>autoscaling</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>autoscaling</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>autoscaling</serviceHostName>
                <isTagAvailable.autoscaling>true</isTagAvailable.autoscaling>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-usage-proxy-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>usage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>usage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>identity</serviceHostName>
                <isTagAvailable.usage>true</isTagAvailable.usage>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-announcements-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>announcementsservice</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>announcementsservice</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>announcements</serviceHostName>
                <isTagAvailable.announcement>true</isTagAvailable.announcement>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-waas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>waas</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>waas</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>waas</serviceHostName>
                <isTagAvailable.redirect>true</isTagAvailable.redirect>
                <isTagAvailable.waas>true</isTagAvailable.waas>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-batchservice-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>batch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>batch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>batch</serviceHostName>
                <isTagAvailable.batchservice>true</isTagAvailable.batchservice>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-fn-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>functions</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>functions</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>functions</serviceHostName>
                <isRegionalClient.functionsinvoke>false</isRegionalClient.functionsinvoke>
                <isTagAvailable.functionsinvoke>true</isTagAvailable.functionsinvoke>
                <isTagAvailable.functionsmanagement>true</isTagAvailable.functionsmanagement>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-budgets-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>budget</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>budget</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>None</serviceHostName>
                <isTagAvailable.budget>true</isTagAvailable.budget>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-quotas-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>limits</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>limits</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.limits>true</isTagAvailable.limits>
                <isTagAvailable.quotas>true</isTagAvailable.quotas>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-digital-assistant-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>oda</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>oda</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.oda>true</isTagAvailable.oda>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-csg-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>storagegateway</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>storagegateway</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.storagegateway>true</isTagAvailable.storagegateway>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dts-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dts</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dts</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.applianceexportjob>true</isTagAvailable.applianceexportjob>
                <isTagAvailable.shippingvendors>true</isTagAvailable.shippingvendors>
                <isTagAvailable.transferappliance>true</isTagAvailable.transferappliance>
                <isTagAvailable.transferapplianceentitlement>true</isTagAvailable.transferapplianceentitlement>
                <isTagAvailable.transferdevice>true</isTagAvailable.transferdevice>
                <isTagAvailable.transferjob>true</isTagAvailable.transferjob>
                <isTagAvailable.transferpackage>true</isTagAvailable.transferpackage>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/public-api-spec/${public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>apigateway</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>apigateway</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.apigateway>true</isTagAvailable.apigateway>
                <isTagAvailable.deployment>true</isTagAvailable.deployment>
                <isTagAvailable.gateway>true</isTagAvailable.gateway>
                <isTagAvailable.workrequests>true</isTagAvailable.workrequests>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-events-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>events</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>events</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.events>true</isTagAvailable.events>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-cloud-incident-management-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>cims</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>cims</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.incident>true</isTagAvailable.incident>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ndcs-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>nosql</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>nosql</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.nosql>true</isTagAvailable.nosql>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-datacatalog-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datacatalog</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datacatalog</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.datacatalog>true</isTagAvailable.datacatalog>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-cec-public-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>oce</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>oce</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.oceinstance>true</isTagAvailable.oceinstance>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-odsc-pegasus-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datascience</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datascience</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.datascience>true</isTagAvailable.datascience>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-bds-cp-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>bds</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>bds</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.bds>true</isTagAvailable.bds>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-analytics-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>analytics</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>analytics</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.analytics>true</isTagAvailable.analytics>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oracle-integration-cp-apiserver-user-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>integration</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>integration</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.integrationinstance>true</isTagAvailable.integrationinstance>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-kam-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>kam</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>kam</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.kam>true</isTagAvailable.kam>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-osms-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/osms-spec/${osms-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>osmanagement</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>osmanagement</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.osmanagement>true</isTagAvailable.osmanagement>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ams-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ams-spec/${ams-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>applicationmigration</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>applicationmigration</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.applicationmigration>true</isTagAvailable.applicationmigration>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-service_api_spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/service_api_spec/${service_api_spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dataflow</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dataflow</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.dataflow>true</isTagAvailable.dataflow>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-mysqlaas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>mysql</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>mysql</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.dbbackups>true</isTagAvailable.dbbackups>
                <isTagAvailable.dbsystem>true</isTagAvailable.dbsystem>
                <isTagAvailable.mysqlaas>true</isTagAvailable.mysqlaas>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-sms-dp-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>secrets</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>secrets</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.secrets>true</isTagAvailable.secrets>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-sms-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>vault</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>vault</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.vaults>true</isTagAvailable.vaults>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oracle-blockchain-platform-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>blockchain</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>blockchain</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.blockchainplatform>true</isTagAvailable.blockchainplatform>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ads-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datasafe</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datasafe</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.datasafe>true</isTagAvailable.datasafe>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-compliance-document-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>compdocsapi</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>compdocsapi</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.compliancedoc>true</isTagAvailable.compliancedoc>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dis-sdk-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dataintegration</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dataintegration</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.dataintegration>true</isTagAvailable.dataintegration>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-hydra-controlplane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>logging</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>logging</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.publiclogging>true</isTagAvailable.publiclogging>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-vmware-provision-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/vmware-provision-service-spec/${vmware-provision-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ocvp</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ocvp</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.esxihost>true</isTagAvailable.esxihost>
                <isTagAvailable.sddc>true</isTagAvailable.sddc>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-usage-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/usage-api-spec/${usage-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>usageapi</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>usageapi</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-cloudguard-cp-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/cloudguard-cp-api-spec/${cloudguard-cp-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>cloudguard</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>cloudguard</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-opsi-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/opsi-api-spec/${opsi-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>operationsinsights</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>operationsinsights</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-management-dashboard-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/management-dashboard-spec/${management-dashboard-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>managementdashboard</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>managementdashboard</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-connectors-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/connectors-spec/${connectors-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>sch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>sch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-optimizer-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/optimizer-spec/${optimizer-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>optimizer</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>optimizer</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-mgmtagent-cloud-services-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/mgmtagent-cloud-services-spec/${mgmtagent-cloud-services-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>managementagent</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>managementagent</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-instance-agent-service-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/instance-agent-service-api-spec/${instance-agent-service-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>computeinstanceagent</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>computeinstanceagent</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-hydra-pika-frontend-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/hydra-pika-frontend-public-api-spec/${hydra-pika-frontend-public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>loggingingestion</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>loggingingestion</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-bastions-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-bastions-spec/${oci-bastions-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>bastion</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>bastion</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ibex-frontend-public-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>loggingsearch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>loggingsearch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-rover-cloud-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/rover-cloud-service-spec/${rover-cloud-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>rover</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>rover</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-logan-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/logan-api-spec/${logan-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>loganalytics</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>loganalytics</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isExpect100ContinueSupported>true</isExpect100ContinueSupported>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-customer-controlled-access-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/customer-controlled-access-spec/${customer-controlled-access-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>operatoraccesscontrol</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>operatoraccesscontrol</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ggs-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ggs-control-plane-spec/${ggs-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>goldengate</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>goldengate</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-tenant-manager-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/tenant-manager-spec/${tenant-manager-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>tenantmanagercontrolplane</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>tenantmanagercontrolplane</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dbmgmt-dbadmin-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dbmgmt-dbadmin-spec/${dbmgmt-dbadmin-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>databasemanagement</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>databasemanagement</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-aj-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/aj-control-plane-spec/${aj-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>jms</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>jms</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-apm-synapi-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/apm-synapi-spec/${apm-synapi-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>apmsynthetics</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>apmsynthetics</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-artifacts-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/artifacts-api-spec/${artifacts-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>artifacts</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>artifacts</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-vss-cp-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/vss-cp-spec/${vss-cp-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>vulnerabilityscanning</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>vulnerabilityscanning</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-network-load-balancer-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/network-load-balancer-spec/${network-load-balancer-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>networkloadbalancer</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>networkloadbalancer</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-cloudbridge-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/cloudbridge-spec/${cloudbridge-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>cloudbridge</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>cloudbridge</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-apm-dataserver-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/apm-dataserver-spec/${apm-dataserver-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>apmtraces</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>apmtraces</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-escs-sm-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/escs-sm-spec/${escs-sm-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>exascale</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>exascale</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-apm-controller-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/apm-controller-spec/${apm-controller-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>apmcontrolplane</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>apmcontrolplane</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-generic-artifacts-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/generic-artifacts-api-spec/${generic-artifacts-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>genericartifactscontent</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>genericartifactscontent</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-msz-cp-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/msz-cp-spec/${msz-cp-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>securityzones</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>securityzones</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dbrs-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dbrs-control-plane-spec/${dbrs-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>databaserecoverysystem</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>databaserecoverysystem</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-devops-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/devops-service-spec/${devops-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>devops</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>devops</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-zdmcs-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/zdmcs-spec/${zdmcs-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>databasemigration</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>databasemigration</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-service-catalog-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/service-catalog-spec/${service-catalog-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>servicecatalog</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>servicecatalog</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dashboard-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dashboard-service-spec/${dashboard-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dashboardservice</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dashboardservice</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ai-service-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ai-service-control-plane-spec/${ai-service-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ailanguage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ailanguage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-certs-dp-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-certs-dp-api-spec/${oci-certs-dp-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>certificates</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>certificates</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-certs-cp-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-certs-cp-api-spec/${oci-certs-cp-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>certificatesmanagement</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>certificatesmanagement</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-vbs-controlplane-instance-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/vbs-controlplane-instance-spec/${vbs-controlplane-instance-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>vbsinst</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>vbsinst</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-queue-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/queue-spec/${queue-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>queue</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>queue</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-sparkline-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/sparkline-service-spec/${sparkline-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dataflowinteractive</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dataflowinteractive</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-apm-config-api</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/apm-config-api/${apm-config-api-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>apmconfig</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>apmconfig</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-waf-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/waf-control-plane-spec/${waf-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>waf</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>waf</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dbtools-service-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dbtools-service-api-spec/${dbtools-service-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>databasetools</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>databasetools</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ad-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ad-control-plane-spec/${ad-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>aianomalydetection</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>aianomalydetection</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ocm-discovery-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ocm-discovery-spec/${ocm-discovery-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ocmdis</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ocmdis</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-identity-data-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/identity-data-plane-api-spec/${identity-data-plane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>iddataplane</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>iddataplane</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dls-data-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dls-data-plane-spec/${dls-data-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datalabelingservicedataplane</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datalabelingservicedataplane</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-data-labeling-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/data-labeling-service-spec/${data-labeling-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datalabelingservice</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datalabelingservice</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-sdk-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/sdk-spec/${sdk-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dataconnectivity</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dataconnectivity</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ocm-migration-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ocm-migration-spec/${ocm-migration-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ocmmigrationapi</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ocmmigrationapi</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-inframon-query-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/inframon-query-spec/${inframon-query-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>appmgmt</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>appmgmt</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-identity-data-plane-api-spec-preview</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/identity-data-plane-api-spec-preview/${identity-data-plane-api-spec-preview-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>identitydataplane</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>identitydataplane</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-vb-cp-apiserver-user-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/vb-cp-apiserver-user-spec/${vb-cp-apiserver-user-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>visualbuilder</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>visualbuilder</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-service-manager-proxy-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/service-manager-proxy-spec/${service-manager-proxy-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>servicemanagerproxy</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>servicemanagerproxy</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-speech-service-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/speech-service-control-plane-spec/${speech-service-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>aispeech</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>aispeech</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ocm-inventory-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ocm-inventory-spec/${ocm-inventory-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ocminv</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ocminv</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-inframon-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/inframon-control-plane-spec/${inframon-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>appmgmtcontrol</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>appmgmtcontrol</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-mesh-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/mesh-public-api-spec/${mesh-public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>servicemesh</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>servicemesh</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-fa-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/fa-control-plane-spec/${fa-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>faaas</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>faaas</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-osp-gateway-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/osp-gateway-api-spec/${osp-gateway-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ospgateway</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ospgateway</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-threat-intel-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/threat-intel-control-plane-spec/${threat-intel-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>threatintelligence</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>threatintelligence</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-stack-monitoring-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/stack-monitoring-spec/${stack-monitoring-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>stackmonitoring</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>stackmonitoring</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-announcements-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/announcements-spec/${announcements-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>announcementservice</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>announcementservice</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-vision-service-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/vision-service-api-spec/${vision-service-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>aivision</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>aivision</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-network-firewall-public-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/network-firewall-public-spec/${network-firewall-public-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>networkfirewall</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>networkfirewall</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-management-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/management-plane-spec/${management-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ociforopensearch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ociforopensearch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dig-media-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dig-media-spec/${dig-media-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>mediaservices</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>mediaservices</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-onesubscription-gateway-spec-usagecomputation21</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/onesubscription-gateway-spec-usagecomputation21/${onesubscription-gateway-spec-usagecomputation21-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>osubusage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>osubusage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-onesubscription-gateway-spec-subscription21</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/onesubscription-gateway-spec-subscription21/${onesubscription-gateway-spec-subscription21-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>osubsubscription</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>osubsubscription</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-onesubscription-gateway-spec-organizationsubscription</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/onesubscription-gateway-spec-organizationsubscription/${onesubscription-gateway-spec-organizationsubscription-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>osuborganizationsubscription</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>osuborganizationsubscription</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-onesubscription-gateway-spec-billingschedule</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/onesubscription-gateway-spec-billingschedule/${onesubscription-gateway-spec-billingschedule-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>osubbillingschedule</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>osubbillingschedule</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>.yardoc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>doc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>variants</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/core</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/identity</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/loadbalancer</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/database</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/objectstorage</directory>
              <excludes>
                <exclude>util.rb</exclude>
                <exclude>transfer</exclude>
                <exclude>transfer/*</exclude>
                <exclude>transfer/multipart/*</exclude>
                <exclude>transfer/multipart/internal/*</exclude>
              </excludes>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/audit</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>.yardoc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>doc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>variants</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dns</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/filestorage</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/email</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/kms</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/resourcesearch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/containerengine</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/resourcemanager</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/telemetry</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/workrequests</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ons</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/healthchecks</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/streaming</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/cache</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/marketplace</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/autoscaling</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/usage</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/announcementsservice</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/waas</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/batch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/functions</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/budget</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/limits</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/oda</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/storagegateway</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dts</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/apigateway</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/events</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/cims</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/nosql</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datacatalog</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/oce</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datascience</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/bds</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/analytics</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/integration</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/kam</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/osmanagement</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/applicationmigration</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dataflow</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/mysql</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/secrets</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/vault</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/blockchain</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datasafe</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/compdocsapi</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dataintegration</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/logging</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ocvp</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/usageapi</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/cloudguard</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/operationsinsights</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/managementdashboard</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/sch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/optimizer</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/managementagent</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/computeinstanceagent</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/loggingingestion</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/bastion</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/loggingsearch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/rover</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/loganalytics</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/operatoraccesscontrol</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/goldengate</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/tenantmanagercontrolplane</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/databasemanagement</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/jms</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/apmsynthetics</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/artifacts</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/vulnerabilityscanning</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/networkloadbalancer</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/cloudbridge</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/apmtraces</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/exascale</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/apmcontrolplane</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/genericartifactscontent</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/securityzones</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/databaserecoverysystem</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/devops</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/databasemigration</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/servicecatalog</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dashboardservice</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ailanguage</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/certificates</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/certificatesmanagement</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/vbsinst</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/queue</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dataflowinteractive</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/apmconfig</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/waf</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/databasetools</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/aianomalydetection</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ocmdis</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/iddataplane</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datalabelingservicedataplane</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datalabelingservice</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dataconnectivity</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ocmmigrationapi</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/appmgmt</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/identitydataplane</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/visualbuilder</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/servicemanagerproxy</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/aispeech</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ocminv</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/appmgmtcontrol</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/servicemesh</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/faaas</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ospgateway</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/threatintelligence</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/stackmonitoring</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/announcementservice</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/aivision</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/networkfirewall</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ociforopensearch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/mediaservices</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/osubusage</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/osubsubscription</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/osuborganizationsubscription</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/osubbillingschedule</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <inherited>false</inherited>
        <configuration>
          <headerDefinitions>
            <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
          </headerDefinitions>
          <header>${project.basedir}/licenseheader.txt</header>
          <mapping>
            <go>DOUBLESLASH_STYLE</go>
          </mapping>
          <includes>
            <include>common/*.go</include>
            <include>common/auth/*.go</include>
            <include>example/*.go</include>
            <include>example/*/*.go</include>
          </includes>
          <excludes>
            <exclude>common/version.go</exclude>
          </excludes>
          <properties>
            <current.year>${current.year}</current.year>
          </properties>
        </configuration>
        <executions>
          <execution>
            <id>oci-go-sdk</id>
            <phase>package</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.oracle.pic.commons</groupId>
        <artifactId>coreservices-api-spec</artifactId>
        <version>1.0.449</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.identity</groupId>
        <artifactId>identity-control-plane-api-spec</artifactId>
        <version>0.4.249</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.casper</groupId>
        <artifactId>casper-api-spec</artifactId>
        <version>1.1.410</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.lb</groupId>
        <artifactId>oralb-api-spec</artifactId>
        <version>296</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dbaas</groupId>
        <artifactId>dbaas-api-spec</artifactId>
        <version>0.1.854</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ffsw</groupId>
        <artifactId>fss-api-spec</artifactId>
        <version>0.0.84</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.sherlock</groupId>
        <artifactId>hemlock-spec</artifactId>
        <version>1.0.4</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.email</groupId>
        <artifactId>email-api-spec</artifactId>
        <version>1.1.12</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dns.pub</groupId>
        <artifactId>public-dns-api-spec</artifactId>
        <version>2.0.100</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.orchestration.orm</groupId>
        <artifactId>maestro-spec</artifactId>
        <version>0.1.36</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.kms</groupId>
        <artifactId>kms-api-spec</artifactId>
        <version>0.3.100</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.query</groupId>
        <artifactId>resource-query-service-spec</artifactId>
        <version>0.0.97</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.clusters</groupId>
        <artifactId>clusters-api-spec</artifactId>
        <version>1.2.33</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.telemetry.api</groupId>
        <artifactId>telemetry-public-api-spec</artifactId>
        <version>2.0.1</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.commons.workrequests</groupId>
        <artifactId>workrequests-api-spec</artifactId>
        <version>0.0.20</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ons</groupId>
        <artifactId>ons-gateway-spec</artifactId>
        <version>2.1.839</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci</groupId>
        <artifactId>healthchecks-api-spec</artifactId>
        <version>1.2.0-20190917.134531-2</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.oss</groupId>
        <artifactId>rest-api-spec</artifactId>
        <version>0.4.1</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oracache</groupId>
        <artifactId>oracache-public-api</artifactId>
        <version>1.0.0-26</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.marketplace</groupId>
        <artifactId>marketplace-consumer-service-spec</artifactId>
        <version>0.1.4408</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.autoscaling.api</groupId>
        <artifactId>autoscaling-public-api-spec</artifactId>
        <version>0.0.77</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.usage</groupId>
        <artifactId>usage-proxy-spec</artifactId>
        <version>0.0.14</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.announcements</groupId>
        <artifactId>announcements-service-spec</artifactId>
        <version>1.0.33</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.waas</groupId>
        <artifactId>oci-waas-api-spec</artifactId>
        <version>1.2.11274</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.obcs</groupId>
        <artifactId>batchservice-api-spec</artifactId>
        <version>0.1.14</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.functions</groupId>
        <artifactId>fn-api-spec</artifactId>
        <version>1.4.20</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.usage.budgets</groupId>
        <artifactId>budgets-control-plane-spec</artifactId>
        <version>2.4.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.quotas</groupId>
        <artifactId>quotas-control-plane-api-spec</artifactId>
        <version>0.0.16</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.oda.cp</groupId>
        <artifactId>digital-assistant-spec</artifactId>
        <version>0.0.8</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.csg</groupId>
        <artifactId>csg-api-spec</artifactId>
        <version>1.0.21</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.rhino</groupId>
        <artifactId>dts-api-spec</artifactId>
        <version>1.0.017</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.apigw</groupId>
        <artifactId>public-api-spec</artifactId>
        <version>1.11.81</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.events</groupId>
        <artifactId>events-control-plane-spec</artifactId>
        <version>0.1.29</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.custops.cims</groupId>
        <artifactId>cloud-incident-management-service-spec</artifactId>
        <version>2.0.241</version>
      </dependency>
      <dependency>
        <groupId>oracle.nosql.oci.controlplane</groupId>
        <artifactId>ndcs-control-plane-spec</artifactId>
        <version>1.0.6</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dcat</groupId>
        <artifactId>datacatalog-api-spec</artifactId>
        <version>1.9.0-2111230547</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.cec.provisioning.controlplane</groupId>
        <artifactId>cec-public-spec</artifactId>
        <version>21.121.3</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.odsc.pegasus</groupId>
        <artifactId>odsc-pegasus-control-plane-spec</artifactId>
        <version>0.1.1103</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.bds</groupId>
        <artifactId>bds-cp-spec</artifactId>
        <version>1.0.62</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.analytics</groupId>
        <artifactId>analytics-control-plane-api-spec</artifactId>
        <version>1.4.0</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oracleintegration.spec</groupId>
        <artifactId>oracle-integration-cp-apiserver-user-spec</artifactId>
        <version>1.0.28</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.kam</groupId>
        <artifactId>kam-api-spec</artifactId>
        <version>0.0.1-20191023.164232-5</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.osms.api</groupId>
        <artifactId>osms-spec</artifactId>
        <version>0.3.0-128</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.migration.application</groupId>
        <artifactId>ams-spec</artifactId>
        <version>0.1.56</version>
      </dependency>
      <dependency>
        <groupId>oracle.dfcs.server</groupId>
        <artifactId>service_api_spec</artifactId>
        <version>1.0.254-RELEASEPREVIEW</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.mysql</groupId>
        <artifactId>mysqlaas-api-spec</artifactId>
        <version>14.29.0</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocisms.dataplane</groupId>
        <artifactId>oci-sms-dp-api-spec</artifactId>
        <version>0.0.16</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocisms.controlplane</groupId>
        <artifactId>oci-sms-api-spec</artifactId>
        <version>0.0.16</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.blockchain</groupId>
        <artifactId>oracle-blockchain-platform-spec</artifactId>
        <version>21.4.1</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.ads.admin.cp</groupId>
        <artifactId>ads-control-plane-spec</artifactId>
        <version>220120.00</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.compdocs</groupId>
        <artifactId>compliance-document-service-spec</artifactId>
        <version>0.1.173</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.dis</groupId>
        <artifactId>dis-sdk-spec</artifactId>
        <version>1.2.0-5044</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.hydra.controlplane</groupId>
        <artifactId>hydra-controlplane-api-spec</artifactId>
        <version>0.0.1520</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.vmware.ocvp</groupId>
        <artifactId>vmware-provision-service-spec</artifactId>
        <version>0.1.1631</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.metering.usagestore.api</groupId>
        <artifactId>usage-api-spec</artifactId>
        <version>1.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.cloudguard</groupId>
        <artifactId>cloudguard-cp-api-spec</artifactId>
        <version>2.1.571</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.opsi.api</groupId>
        <artifactId>opsi-api-spec</artifactId>
        <version>5.1.21</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dashx</groupId>
        <artifactId>management-dashboard-spec</artifactId>
        <version>1.0.417</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.connectors</groupId>
        <artifactId>connectors-spec</artifactId>
        <version>0.2.56</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.optimizer</groupId>
        <artifactId>optimizer-spec</artifactId>
        <version>0.1.514</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.macs</groupId>
        <artifactId>mgmtagent-cloud-services-spec</artifactId>
        <version>1.2.216</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.compute.ias</groupId>
        <artifactId>instance-agent-service-api-spec</artifactId>
        <version>0.0.39</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.hydra.pika.frontend</groupId>
        <artifactId>hydra-pika-frontend-public-api-spec</artifactId>
        <version>0.0.1603</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocibstn.controlplane.resources</groupId>
        <artifactId>oci-bastions-spec</artifactId>
        <version>0.1.1010</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.hydra.ibex</groupId>
        <artifactId>ibex-frontend-public-spec</artifactId>
        <version>1.0.2177</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.rover</groupId>
        <artifactId>rover-cloud-service-spec</artifactId>
        <version>3.0.13781</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.loganalytics.api</groupId>
        <artifactId>logan-api-spec</artifactId>
        <version>0.1.314</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.db.cca</groupId>
        <artifactId>customer-controlled-access-spec</artifactId>
        <version>1.1.184</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.ggs</groupId>
        <artifactId>ggs-control-plane-spec</artifactId>
        <version>1.1.21-PREVIEW</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.accmgmt.tenantmgr.controlplane</groupId>
        <artifactId>tenant-manager-spec</artifactId>
        <version>0.1.899</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.dpd.dbmgmt.api</groupId>
        <artifactId>dbmgmt-dbadmin-spec</artifactId>
        <version>20201101.107</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.aj</groupId>
        <artifactId>aj-control-plane-spec</artifactId>
        <version>3.0.241</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.apm.service.synapi</groupId>
        <artifactId>apm-synapi-spec</artifactId>
        <version>0.1.1529</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.artifacts</groupId>
        <artifactId>artifacts-api-spec</artifactId>
        <version>0.2.10</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.vss</groupId>
        <artifactId>vss-cp-spec</artifactId>
        <version>0.1.380</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.nlb</groupId>
        <artifactId>network-load-balancer-spec</artifactId>
        <version>0.1.1096</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.cloudbridge</groupId>
        <artifactId>cloudbridge-spec</artifactId>
        <version>0.1.157</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.apm.service.dataserver.spec</groupId>
        <artifactId>apm-dataserver-spec</artifactId>
        <version>20200630.4.117</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.exascale</groupId>
        <artifactId>escs-sm-spec</artifactId>
        <version>2102.1.1</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.apm.controller.spec</groupId>
        <artifactId>apm-controller-spec</artifactId>
        <version>20200630.4.14</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.artifacts.generic</groupId>
        <artifactId>generic-artifacts-api-spec</artifactId>
        <version>0.1.6</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.msz</groupId>
        <artifactId>msz-cp-spec</artifactId>
        <version>0.2.197</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dbrs</groupId>
        <artifactId>dbrs-control-plane-spec</artifactId>
        <version>0.1.49</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dlc</groupId>
        <artifactId>devops-service-spec</artifactId>
        <version>0.2.17</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.zdmcs</groupId>
        <artifactId>zdmcs-spec</artifactId>
        <version>0.1.86</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.servicecatalog</groupId>
        <artifactId>service-catalog-spec</artifactId>
        <version>0.1.4171</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dashboard</groupId>
        <artifactId>dashboard-service-spec</artifactId>
        <version>0.1.148</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocas</groupId>
        <artifactId>ai-service-control-plane-spec</artifactId>
        <version>1.0.16</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocicerts.dataplane</groupId>
        <artifactId>oci-certs-dp-api-spec</artifactId>
        <version>0.1.22</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocicerts.controlplane</groupId>
        <artifactId>oci-certs-cp-api-spec</artifactId>
        <version>0.1.46</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.vbs.instance</groupId>
        <artifactId>vbs-controlplane-instance-spec</artifactId>
        <version>0.1.56</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.queue.cp</groupId>
        <artifactId>queue-spec</artifactId>
        <version>0.0.40</version>
      </dependency>
      <dependency>
        <groupId>oracle.sparkline.dlap</groupId>
        <artifactId>sparkline-service-spec</artifactId>
        <version>0.1.724</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.apm.service.config</groupId>
        <artifactId>apm-config-api</artifactId>
        <version>0.1.263</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.waf.controlplane</groupId>
        <artifactId>waf-control-plane-spec</artifactId>
        <version>1.0.2-RELEASEPREVIEW</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dbtools</groupId>
        <artifactId>dbtools-service-api-spec</artifactId>
        <version>0.2.434</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocas</groupId>
        <artifactId>ad-control-plane-spec</artifactId>
        <version>1.0.14-preview</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocm.discovery</groupId>
        <artifactId>ocm-discovery-spec</artifactId>
        <version>0.1.23</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.identity</groupId>
        <artifactId>identity-data-plane-api-spec</artifactId>
        <version>0.1.1</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.dls.dp</groupId>
        <artifactId>dls-data-plane-spec</artifactId>
        <version>1.0.113</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.dls.cp.dataset</groupId>
        <artifactId>data-labeling-service-spec</artifactId>
        <version>1.0.113</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.dcms-dp</groupId>
        <artifactId>sdk-spec</artifactId>
        <version>2.1.0-293</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocm.migration</groupId>
        <artifactId>ocm-migration-spec</artifactId>
        <version>0.1.404</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.inframon.query</groupId>
        <artifactId>inframon-query-spec</artifactId>
        <version>0.2.12</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.identity</groupId>
        <artifactId>identity-data-plane-api-spec-preview</artifactId>
        <version>0.2.69</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.vb.cp.spec</groupId>
        <artifactId>vb-cp-apiserver-user-spec</artifactId>
        <version>1.0.4</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.smproxy</groupId>
        <artifactId>service-manager-proxy-spec</artifactId>
        <version>0.1.514</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocas.speech</groupId>
        <artifactId>speech-service-control-plane-spec</artifactId>
        <version>1.0.19</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.inventory</groupId>
        <artifactId>ocm-inventory-spec</artifactId>
        <version>0.1.223</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.inframon.cp</groupId>
        <artifactId>inframon-control-plane-spec</artifactId>
        <version>0.1.95</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.mesh</groupId>
        <artifactId>mesh-public-api-spec</artifactId>
        <version>1.0.7</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.facontrolplane</groupId>
        <artifactId>fa-control-plane-spec</artifactId>
        <version>0.3.3297</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.store</groupId>
        <artifactId>osp-gateway-api-spec</artifactId>
        <version>0.2.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.threatintelcp</groupId>
        <artifactId>threat-intel-control-plane-spec</artifactId>
        <version>0.1.10-PREVIEW</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.stackmonitoring</groupId>
        <artifactId>stack-monitoring-spec</artifactId>
        <version>0.3.20</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.announcements</groupId>
        <artifactId>announcements-spec</artifactId>
        <version>2.0.123</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocas.vision</groupId>
        <artifactId>vision-service-api-spec</artifactId>
        <version>0.3.85</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.nfw.public</groupId>
        <artifactId>network-firewall-public-spec</artifactId>
        <version>0.1.13</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.elasticsearch.mp</groupId>
        <artifactId>management-plane-spec</artifactId>
        <version>0.2.208</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.dmp</groupId>
        <artifactId>dig-media-spec</artifactId>
        <version>0.4.13</version>
      </dependency>
      <dependency>
        <groupId>oal.oracle.apps.csa.service.api</groupId>
        <artifactId>onesubscription-gateway-spec-usagecomputation21</artifactId>
        <version>21.05.01</version>
      </dependency>
      <dependency>
        <groupId>oal.oracle.apps.csa.service.api</groupId>
        <artifactId>onesubscription-gateway-spec-subscription21</artifactId>
        <version>21.05.01</version>
      </dependency>
      <dependency>
        <groupId>oal.oracle.apps.csa.service.api</groupId>
        <artifactId>onesubscription-gateway-spec-organizationsubscription</artifactId>
        <version>21.05.01</version>
      </dependency>
      <dependency>
        <groupId>oal.oracle.apps.csa.service.api</groupId>
        <artifactId>onesubscription-gateway-spec-billingschedule</artifactId>
        <version>21.05.01</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>